{% set name = "filelock" %}
{% set version = "3.17.0" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: ee4e77401ef576ebb38cd7f13b9b28893194acc20a8e68e18730ba9c0e54660e

build:
  number: 0
  skip: True  # [py<39]
  script: {{ PYTHON }} -m pip install --no-deps --no-build-isolation . -vv

requirements:
  host:
    - python
    - hatchling >=1.27
    - hatch-vcs >=0.4
    - pip
  run:
    - python

test:
  source_files:
    - tests
  imports:
    - filelock
  requires:
    - pip
    - pytest >=8.3.4
    - pytest-mock >=3.14
    # >=20.28.1 in upstream, but we don't have that
    - virtualenv >=20.28.0
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - pytest -vv tests

about:
  home: https://github.com/tox-dev/py-filelock
  license: Unlicense
  license_family: Public-Domain
  license_file: LICENSE
  summary: A platform independent file lock.
  description: |
    A filelock provides a synchronisation mechanism between different
    instances of your application, similar to a thread lock. It can be
    used to signalize that files, directories or other resources are
    currently used or manipulated (Think of a sync.lock file). Only the
    existence of the lockfile is watched for this purpose. The file itself
    can not be written and is always empty.
  doc_url: https://py-filelock.readthedocs.io
  dev_url: https://github.com/tox-dev/py-filelock

extra:
  recipe-maintainers:
    - jakirkham
    - mariusvniekerk
